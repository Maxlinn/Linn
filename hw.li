import (
    "io.*",
    "ipt.*"
    # "@std.io" when don't conflict with current dir
)

# by default, all functions and classes are exported
# add single _ to hide to same package
# add double _ to hide to everything else
# but actually, there are no restrictions

class Man extends (Human){
    _dick_length :float;

    fn __init__() = default;

    # don't export
    fn __wank();
}

# declare an array of chars
s :char.[] = "114514";

# compound type
number :{int | float | complex};

# any type
v = dict`{}`;

# function pointer
type fp = fn(int, int)->int;

# literal
# define class.__`__ to implement
timeout = time_span`10s`;


fn __main(
    args :int `number of arguments`,
    argv :char.&.& `arrays of arguments`
    ) -> ret_code :int `return code to OS` {

    for(const char.& p = s; p.* ; p += 1){
        char ch = p.*;
        io.print(ch);
    }
    return 0;
}
